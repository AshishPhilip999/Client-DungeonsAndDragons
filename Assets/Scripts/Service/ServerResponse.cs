// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/ServerResponse.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DnD.Service {

  /// <summary>Holder for reflection information generated from proto/ServerResponse.proto</summary>
  public static partial class ServerResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/ServerResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServerResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpwcm90by9TZXJ2ZXJSZXNwb25zZS5wcm90bxILRG5ELnNlcnZpY2UiWQoO",
            "U2VydmVyUmVzcG9uc2USMQoIcmVzcG9uc2UYASABKA4yHy5EbkQuc2Vydmlj",
            "ZS5TZXJ2ZXJSZXNwb25zZVR5cGUSFAoMcmVzcG9uc2VEYXRhGAIgASgMKmIK",
            "ElNlcnZlclJlc3BvbnNlVHlwZRIWChJDT05ORUNUSU9OX1NVQ0NFU1MQABIW",
            "ChJDT05ORUNUSU9OX0ZBSUxVUkUQARIcChhUSUxFX0dFTkVSQVRJT05fUkVT",
            "UE9OU0UQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DnD.Service.ServerResponseType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DnD.Service.ServerResponse), global::DnD.Service.ServerResponse.Parser, new[]{ "Response", "ResponseData" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ServerResponseType {
    [pbr::OriginalName("CONNECTION_SUCCESS")] ConnectionSuccess = 0,
    [pbr::OriginalName("CONNECTION_FAILURE")] ConnectionFailure = 1,
    [pbr::OriginalName("TILE_GENERATION_RESPONSE")] TileGenerationResponse = 2,
  }

  #endregion

  #region Messages
  public sealed partial class ServerResponse : pb::IMessage<ServerResponse> {
    private static readonly pb::MessageParser<ServerResponse> _parser = new pb::MessageParser<ServerResponse>(() => new ServerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DnD.Service.ServerResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerResponse(ServerResponse other) : this() {
      response_ = other.response_;
      responseData_ = other.responseData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerResponse Clone() {
      return new ServerResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::DnD.Service.ServerResponseType response_ = global::DnD.Service.ServerResponseType.ConnectionSuccess;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DnD.Service.ServerResponseType Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "responseData" field.</summary>
    public const int ResponseDataFieldNumber = 2;
    private pb::ByteString responseData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ResponseData {
      get { return responseData_; }
      set {
        responseData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      if (ResponseData != other.ResponseData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Response != global::DnD.Service.ServerResponseType.ConnectionSuccess) hash ^= Response.GetHashCode();
      if (ResponseData.Length != 0) hash ^= ResponseData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Response != global::DnD.Service.ServerResponseType.ConnectionSuccess) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      if (ResponseData.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ResponseData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Response != global::DnD.Service.ServerResponseType.ConnectionSuccess) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      if (ResponseData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ResponseData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerResponse other) {
      if (other == null) {
        return;
      }
      if (other.Response != global::DnD.Service.ServerResponseType.ConnectionSuccess) {
        Response = other.Response;
      }
      if (other.ResponseData.Length != 0) {
        ResponseData = other.ResponseData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Response = (global::DnD.Service.ServerResponseType) input.ReadEnum();
            break;
          }
          case 18: {
            ResponseData = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
